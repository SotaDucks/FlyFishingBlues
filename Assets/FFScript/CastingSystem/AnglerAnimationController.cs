using UnityEngine;

public class AnglerAnimationController : MonoBehaviour
{
    // Animator?????
    private Animator animator;

    // ??????????????????
    private readonly string PRESSING_SPACE = "PressingSpace";
    private readonly string SWING_LEFT = "SwingLeft";
    private readonly string SWING_RIGHT = "SwingRight";
    private readonly string RETRIEVE = "Retrieve";
    private readonly string LIFT_ROD = "LiftRod";
    private readonly string SETTHEHOOK = "SetTheHook";
    void Start()
    {
        // ????Animator?????
        animator = GetComponent<Animator>();
        if (animator == null)
        {
            Debug.LogError("Animator?????????????");
        }
    }

    void Update()
    {
        HandleInput();
    }

    /// <summary>
    /// ??????????????????????Animator??????
    /// </summary>
    private void HandleInput()
    {
        if (animator == null)
            return;

        // ???????????????????????
        bool isPressingSpace = Input.GetKey(KeyCode.Space);
        animator.SetBool(PRESSING_SPACE, isPressingSpace);

        // ??????A?????????
        if (Input.GetKeyDown(KeyCode.A))
        {
            Debug.Log("A??????????????????? SwingLeft ??????");
            animator.SetBool(SWING_LEFT, true);
            // ?????????????????????????????????
            StartCoroutine(ResetSwingParameter(SWING_LEFT));
        }

        // ??????D?????????
        if (Input.GetKeyDown(KeyCode.D))
        {
            Debug.Log("D??????????????????? SwingRight ??????");
            animator.SetBool(SWING_RIGHT, true);
            // ?????????????????????????????????
            StartCoroutine(ResetSwingParameter(SWING_RIGHT));
        }

        // ??????S?????????
        if (Input.GetKeyDown(KeyCode.S))
        {
            // ??????PressingSpace?false?????????????Retrieve
            if (!isPressingSpace)
            {
                Debug.Log("S??????????????????? Retrieve ??????");
                animator.SetTrigger(RETRIEVE);
                // ???????????????????????Trigger???????Trigger?????????????
            }
            else
            {
                Debug.Log("S???????????????? PressingSpace ? true????????????? Retrieve ??????");
            }
        }


        if (Input.GetKeyDown(KeyCode.W) && animator.GetBool("FishOn"))
        {
            
            // animator.SetBool(PRESSING_W, true);
            animator.SetTrigger(SETTHEHOOK);


        }

        if (Input.GetKey(KeyCode.A))
        {

            animator.SetBool(LIFT_ROD, true);
            // ???????????????????????Trigger???????Trigger?????????????

        }


        if (Input.GetKeyUp(KeyCode.A))
        {

            animator.SetBool(LIFT_ROD, false);
            // ???????????????????????Trigger???????Trigger?????????????

        }


    }

    /// <summary>
    /// ????????????????????????wing??????
    /// </summary>
    /// <param name="parameter">??????????????????</param>
    /// <returns></returns>
    private System.Collections.IEnumerator ResetSwingParameter(string parameter)
    {
        // ??????????????????????????????????????????????????
        // ???????????????wing????????????0.5???
        yield return new WaitForSeconds(0.5f);
        animator.SetBool(parameter, false);
    }

    /// <summary>
    /// ????????????????????????????????????Swing??????
    /// ???????????????????????????????????????????????????????????????????????
    /// </summary>
    /// <param name="parameter">??????????????????</param>
    public void OnAnimationEnd(string parameter)
    {
        if (animator != null)
        {
            animator.SetBool(parameter, false);
            Debug.Log($"{parameter} ???????????????");
        }
    }
}
